{"version":3,"sources":["../../src/core/Task.js"],"names":["Task","task","description","timings","filtered","time","operation","timing","length","newStop","stop","value","momentKey","isBefore","start","Promise","resolve","reject","started","error","push","toDate","setDescription","setStatus","log","toISOString","text","status","stringTime","parsed","map","_modifyTiming","t","err","console","end","_filterTimingsByDate","format","isBetween","reduce","acc","val","duration","forEach"],"mappings":"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","file":"Task.js","sourcesContent":["import moment from 'moment';\n\nimport { STARTED, PAUSED, IN_PROGRESS, FINISHED } from './constants';\nimport { recognizeModifierTiming, inPeriod, getSeconds } from './utils';\nimport { cliError } from './output';\nimport { EINPROGRESS } from 'constants';\n\nexport default class Task {\n    constructor(task) {\n        this.task = task\n            ? task\n            : {\n                  description: '',\n                  timings: []\n              };\n        this.filtered = false;\n    }\n\n    _modifyTiming(time, operation) {\n        let timing = this.task.timings[this.task.timings.length - 1];\n        if (!timing) {\n            throw `This task is not started, start it.`;\n        }\n\n        let newStop = moment(timing.stop);\n        newStop = newStop[operation](time.value, time.momentKey);\n\n        if (operation === 'subtract' && newStop.isBefore(timing.start)) {\n            throw 'You cant subtract more time';\n            return;\n        }\n\n        this.task.timings[this.task.timings.length - 1].stop = newStop;\n    }\n\n    start(description) {\n        return new Promise((resolve, reject) => {\n            let started = false;\n\n            let timing = this.task.timings[this.task.timings.length - 1];\n\n            if (timing && timing.start && !timing.stop) {\n                reject(this.error(`This task already started.`));\n            }\n\n            this.task.timings.push({\n                start: moment().toDate()\n            });\n\n            this.setDescription(description);\n            this.setStatus(IN_PROGRESS);\n            this.log('start');\n            resolve();\n        });\n    }\n\n    pause() {\n        return new Promise((resolve, reject) => {\n            let timing = this.task.timings[this.task.timings.length - 1];\n\n            if (!timing) {\n                reject(this.error(`This task is not started, start it.`));\n            }\n\n            if (timing && timing.start && timing.stop) {\n                reject(this.error(`This task are ended/paused, unpaused it.`));\n            }\n\n            this.task.timings[this.task.timings.length - 1].stop = moment().toDate();\n            this.setStatus(PAUSED);\n            this.log('pause');\n            resolve();\n        });\n    }\n\n    unpause() {\n        return new Promise((resolve, reject) => {\n            let timing = this.task.timings[this.task.timings.length - 1];\n            if (!timing) {\n                reject(this.error(`This task is not started, start it`));\n            }\n\n            if (timing && timing.start && !timing.stop) {\n                reject(this.error(`This task is started, pause/stop first`));\n            }\n\n            this.task.timings.push({\n                start: moment().toDate()\n            });\n            this.setStatus(IN_PROGRESS);\n            this.log('unpause');\n            resolve();\n        });\n    }\n\n    stop(description) {\n        return new Promise((resolve, reject) => {\n            let timing = this.task.timings[this.task.timings.length - 1];\n            if (!timing || (timing && !timing.start)) {\n                reject(this.error(`This task is not started, start it`));\n            }\n\n            if (timing.start && timing.stop) {\n                reject(this.error(`This task already ended, start/unpause it.`));\n            }\n\n            this.task.timings[this.task.timings.length - 1].stop = moment().toDate();\n            this.setDescription(description);\n            this.setStatus(FINISHED);\n            this.log('stop');\n            resolve();\n        });\n    }\n\n    log(operation) {\n        if (!this.task.log) {\n            this.task.log = [];\n        }\n\n        this.task.log.push(`${operation}#${moment().toISOString()}`);\n    }\n\n    description() {\n        return this.task.description;\n    }\n\n    setDescription(text) {\n        this.task.description = text\n            ? text\n            : this.task.description ? this.task.description : '';\n    }\n\n    setStatus(status) {\n        this.task.status = status;\n    }\n\n    makeOperationOverTime(operation, stringTime) {\n        return new Promise((resolve, reject) => {\n            let parsed = recognizeModifierTiming(stringTime);\n\n            try {\n                parsed.map(t => {\n                    this._modifyTiming(t, operation);\n                });\n            } catch (err) {\n                console.error(err);\n                reject(this.error(`Error trying to ${operation} time to task`));\n            }\n            this.log(`${operation}:${stringTime}`);\n\n            resolve();\n        });\n    }\n\n    get() {\n        return this.task;\n    }\n\n    filterByDates(start, end) {\n        if (this.task.timings) {\n            if (start && end) {\n                this.task.timings = this._filterTimingsByDate(start, end);\n            } else if (start) {\n                end = moment().format('YYYY/MM/DD');\n                this.task.timings = this._filterTimingsByDate(start, end);\n            } else if (end) {\n                start = moment(0).format('YYYY/MM/DD');\n                this.task.timings = this._filterTimingsByDate(start, end);\n            }\n\n            if (this.task.timings.length === 0) {\n                this.filtered = true;\n            }\n        } else {\n            let t = inPeriod(this.task.start, this.task.stop, start, end);\n            if (t.isBetween) {\n                this.task.start = t.start;\n                this.task.stop = t.stop;\n            } else {\n                this.filtered = true;\n            }\n        }\n\n        return this;\n    }\n\n    _filterTimingsByDate(start, end) {\n        return this.task.timings.reduce((acc, val) => {\n            console.log(val);\n            let t = inPeriod(val.start, val.stop, start, end);\n            console.log(t);\n            if (t.isBetween) {\n                acc.push({\n                    start: t.start,\n                    stop: t.stop\n                });\n            }\n            return acc;\n        }, []);\n    }\n\n    getSeconds() {\n        let duration = 0;\n\n        if (this.task.timings) {\n            this.task.timings.forEach(timing => {\n                duration += getSeconds(timing);\n            });\n        } else {\n            duration = getSeconds(this.task);\n        }\n\n        return duration;\n    }\n\n    getStartDate() {\n        if (this.task.timings && this.task.timings[0]) {\n            return this.task.timings[0].start;\n        } else {\n            return this.task.start;\n        }\n    }\n\n    getEndDate() {\n        if (this.task.timings) {\n            return this.task.timings[this.task.timings.length - 1].stop;\n        } else if (this.task.stop) {\n            return this.task.stop;\n        } else {\n            return moment().toDate();\n        }\n    }\n\n    error(err) {\n        return err; //+ ` \\n Task: ${JSON.stringify(this.task)}`\n    }\n}\n"]}