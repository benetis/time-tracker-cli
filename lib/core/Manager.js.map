{"version":3,"sources":["../../src/core/Manager.js"],"names":["Manager","cfg","repositories","tasks","all","config","key","task","update","get","Object","assign","set","description","t","getTask","start","then","storeTask","console","log","toISOString","catch","pause","unpause","stop","text","setDescription","name","getSeconds","operation","stringTime","makeOperationOverTime","string","keys","forEach","indexOf","push","search","map","k","join","length","prompt","type","message","default","answers","cls","unflatten","end","expanded","filterByDates","element","value","configElements","toString","newCfg","newTasks","migratedTasks","rate","full","sort","a","b"],"mappings":"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","file":"Manager.js","sourcesContent":["import flat from 'flat';\nimport moment from 'moment';\nimport inquirer from 'inquirer';\n\nimport Task from './Task';\nimport { recognizeModifierTiming, humanParseDiff, getSeconds } from './utils';\nimport {\n    STARTED,\n    PAUSED,\n    UNPAUSED,\n    IN_PROGRESS,\n    FINISHED,\n    configElements\n} from './constants';\nimport { sumarize, outputVertical, cliError, cliSuccess, markdown } from './output';\nimport { migrateToV2 } from './dbMigrations';\n\nexport default class Manager {\n    repositories = ['tasks', 'config'];\n\n    constructor(cfg) {\n        this.cfg = cfg;\n        this.tasks = cfg.all.tasks;\n        this.config = cfg.all.config ? cfg.all.config : {};\n    }\n\n    getTask(key) {\n        let task = this.tasks[key] ? this.tasks[key] : null;\n        return new Task(task);\n    }\n\n    storeTask(key, task) {\n        let update = {};\n        update[key] = task.get();\n        this.tasks = Object.assign({}, this.tasks, update);\n        this.cfg.set('tasks', this.tasks);\n    }\n\n    startTask(key, description) {\n        let t = this.getTask(key);\n        t\n            .start(description)\n            .then(() => {\n                this.storeTask(key, t);\n                console.log(\n                    outputVertical('Task:', key, STARTED, moment().toISOString())\n                );\n            }, cliError)\n            .catch(cliError);\n    }\n\n    pauseTask(key) {\n        let t = this.getTask(key);\n        t\n            .pause()\n            .then(() => {\n                this.storeTask(key, t);\n                console.log(outputVertical('Task:', key, PAUSED, moment().toISOString()));\n            }, cliError)\n            .catch(cliError);\n    }\n\n    unpauseTask(key) {\n        let t = this.getTask(key);\n        t\n            .unpause()\n            .then(() => {\n                this.storeTask(key, t);\n                console.log(\n                    outputVertical('Task:', key, UNPAUSED, moment().toISOString())\n                );\n            }, cliError)\n            .catch(cliError);\n    }\n\n    stopTask(key, description) {\n        let t = this.getTask(key);\n        t\n            .stop(description)\n            .then(() => {\n                this.storeTask(key, t);\n                console.log(\n                    outputVertical('Task:', key, FINISHED, moment().toISOString())\n                );\n            }, cliError)\n            .catch(cliError);\n    }\n\n    addDescription(key, text) {\n        let t = this.getTask(key);\n        t.setDescription(text);\n        this.storeTask(key, t);\n    }\n\n    getTime(name) {\n        let t = this.getTask(name);\n        return t.getSeconds();\n    }\n\n    modifyTask(operation, name, stringTime) {\n        let t = this.getTask(name);\n        t\n            .makeOperationOverTime(operation, stringTime)\n            .then(() => {\n                this.storeTask(name, t);\n            }, cliError)\n            .catch(cliError);\n    }\n\n    search(string = 'all') {\n        let keys = Object.keys(this.tasks);\n        let tasks = [];\n        keys.forEach(key => {\n            if (string === 'all' || key.indexOf(string) > -1) {\n                tasks.push({\n                    name: key,\n                    task: new Task(this.tasks[key])\n                });\n            }\n        });\n        return tasks;\n    }\n\n    delete(string) {\n        let tasks = this.search(string);\n\n        console.log(tasks.map(k => `${k.name} \\n`).join(''));\n\n        if (tasks.length === 0) {\n            cliSuccess('No tasks found to delete.');\n            return;\n        }\n\n        inquirer\n            .prompt([\n                {\n                    type: 'confirm',\n                    name: 'cls',\n                    message: `Are you sure you want to delete this tasks?`,\n                    default: false\n                }\n            ])\n            .then(answers => {\n                if (answers.cls) {\n                    tasks.forEach(k => {\n                        delete this.tasks[k.name];\n                        this.cfg.set('tasks', this.tasks);\n                    });\n                    cliSuccess('Tasks deleted.');\n                }\n            })\n            .catch(cliError);\n    }\n\n    getTasksJson(key) {\n        return flat.unflatten(key ? this.tasks[key] : this.tasks);\n    }\n\n    getTasksMd(key, start, end, expanded) {\n        let tasks;\n        if (key) {\n            tasks = this.search(key);\n        } else {\n            tasks = this.search();\n        }\n\n        tasks.map(task => {\n            if (start || end) {\n                task = task.task.filterByDates(start, end);\n            }\n            return task;\n        });\n\n        return markdown(tasks, expanded);\n    }\n\n    getConfig() {\n        return this.config;\n    }\n\n    configure(element, value) {\n        if (configElements.indexOf(element) < 0) {\n            return cliError(\n                `Config key (${element}) not allowed, allowed keys: ${this.configElements.toString()} `\n            );\n        }\n\n        let newCfg = {\n            [element]: value\n        };\n\n        this.config = Object.assign({}, this.config, newCfg);\n        this.cfg.set('config', this.config);\n\n        return this.config;\n    }\n\n    update() {\n        if (!this.config || (this.config && this.config['config.version'] !== '2')) {\n            console.log('DB: Need to be updated');\n\n            migrateToV2(this.tasks)\n                .then(tasks => {\n                    let newTasks = {};\n                    tasks.forEach(t => (newTasks[t.key] = t.task));\n                    return newTasks;\n                })\n                .then(migratedTasks => {\n                    this.cfg.set('tasks', migratedTasks);\n                    this.cfg.set(\n                        'config',\n                        Object.assign(this.config, {\n                            'config.version': '2'\n                        })\n                    );\n\n                    cliSuccess('Configuration migrated to version 2.');\n                }, cliError)\n                .catch(cliError);\n        } else {\n            cliSuccess('No need to update the DB.');\n        }\n    }\n\n    sumarize(key, rate, full = true) {\n        let tasks = this.search(key);\n        tasks.sort((a, b) => {\n            return a.name > b.name;\n        });\n        sumarize(key, tasks, rate, full, this.config['format.output']);\n    }\n}\n"]}