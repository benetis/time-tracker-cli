{"version":3,"sources":["../../src/core/Manager.js"],"names":["Manager","cfg","repositories","tasks","all","config","key","task","update","get","Object","assign","set","description","t","getTask","start","then","storeTask","console","log","toISOString","catch","pause","unpause","stop","text","setDescription","name","getSeconds","operation","stringTime","makeOperationOverTime","string","keys","forEach","indexOf","push","search","map","k","join","length","prompt","type","message","default","answers","cls","unflatten","end","timings","unflatTasks","body","total","filterDates","Date","dateFormat","hourFormat","filterStart","filtered","i","filterEnd","unflattened","i1","i2","timing","d","date","getFullYear","twoDigits","n","getMonth","getDate","getHours","getMinutes","Math","floor","element","value","configElements","toString","newCfg","newTasks","migratedTasks","rate","full","sort","a","b"],"mappings":"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","file":"Manager.js","sourcesContent":["import flat from 'flat'\nimport moment from 'moment'\nimport inquirer from 'inquirer'\n\nimport Task from './Task'\nimport { recognizeModifierTiming } from './utils'\nimport { STARTED, PAUSED, UNPAUSED, IN_PROGRESS, FINISHED, configElements } from './constants'\nimport { sumarize, outputVertical, cliError, cliSuccess } from './output'\nimport { migrateToV2 } from './dbMigrations'\n\nexport default class Manager {\n\n    repositories = ['tasks', 'config']\n\n    constructor(cfg) {\n        this.cfg = cfg\n        this.tasks = cfg.all.tasks\n        this.config = (cfg.all.config) ? cfg.all.config : {}\n    }\n\n    getTask(key) {\n        let task = (this.tasks[key]) ? this.tasks[key] : null\n        return new Task(task)\n    }\n\n    storeTask(key, task){\n        let update = {}\n        update[key] = task.get()\n        this.tasks = Object.assign({}, this.tasks, update)\n        this.cfg.set('tasks', this.tasks)\n    }\n\n    startTask(key, description) {\n        let t = this.getTask(key)\n        t.start(description)\n            .then(() => {\n                this.storeTask(key, t)\n                console.log(\n                    outputVertical('Task:', key, STARTED, moment().toISOString())\n                )\n            }, cliError)\n            .catch(cliError)\n    }\n\n    pauseTask(key){\n        let t = this.getTask(key)\n        t.pause()\n            .then(()=>{\n                this.storeTask(key, t)\n                console.log(\n                    outputVertical('Task:', key, PAUSED, moment().toISOString())\n                )\n            }, cliError)\n            .catch(cliError)\n    }\n\n    unpauseTask(key){\n        let t = this.getTask(key)\n        t.unpause()\n            .then(()=>{\n                this.storeTask(key, t)\n                console.log(\n                    outputVertical('Task:', key, UNPAUSED, moment().toISOString())\n                )\n            }, cliError)\n            .catch(cliError)\n    }\n\n    stopTask(key, description) {\n        let t = this.getTask(key)\n        t.stop(description)\n            .then(()=>{\n                this.storeTask(key, t)\n                console.log(\n                    outputVertical('Task:', key, FINISHED, moment().toISOString())\n                )\n            }, cliError)\n            .catch(cliError)\n    }\n\n    addDescription(key, text){\n        let t = this.getTask(key)\n        t.setDescription(text)\n        this.storeTask(key, t)\n    }\n\n    getTime(name) {\n        let t = this.getTask(name)\n        return t.getSeconds()\n    }\n\n    modifyTask(operation, name, stringTime){\n        let t = this.getTask(name)\n        t.makeOperationOverTime(operation, stringTime)\n            .then(()=>{\n                this.storeTask(name, t)\n            }, cliError)\n            .catch(cliError)\n    }\n\n    search(string) {\n        let keys = Object.keys(this.tasks)\n        let tasks = []\n        keys.forEach((key)=>{\n            if (string === 'all' || key.indexOf(string) > -1){\n                tasks.push({\n                    name: key,\n                    task: new Task(this.tasks[key])\n                })\n            }\n        })\n        return tasks\n    }\n\n    delete(string) {\n        let tasks = this.search(string)\n\n        console.log(\n            tasks.map(k => `${k.name} \\n`).join('')\n        )\n\n        if (tasks.length === 0) {\n            cliSuccess('No tasks found to delete.')\n            return\n        }\n\n        inquirer.prompt([{\n            type: 'confirm',\n            name: 'cls',\n            message: `Are you sure you want to delete this tasks?`,\n            default: false\n        }]).then((answers) => {\n            if (answers.cls){\n                tasks.forEach(k => {\n                    delete this.tasks[k.name]\n                    this.cfg.set('tasks', this.tasks)\n                })\n                cliSuccess('Tasks deleted.')\n            }\n        })\n        .catch(cliError)\n    }\n\n    getTasksJson(key) {\n        return flat.unflatten(key ? this.tasks[key]: this.tasks)\n    }\n\n\tgetTasksMd(key, start, end) {\n\t\tlet timings\n\t\tif(key){\n\t\t\ttimings = this.tasks[key].timings\n\t\t}else{\n\t\t\ttimings = this.unflatTasks(this.tasks)\n\t\t}\n\t\tlet body = \t\"| Start | End | Hours | Subtotal | Description |\\n\"\n\t\tbody += \t\"| ----- | --- | -----:| -------: | ----------- |\\n\"\n\t\tlet total = 0;\n\n\t\ttimings = start || end ? this.filterDates(timings, start, end) : timings\n\t\ttimings.forEach( k => {\n\t\t\tlet start = new Date(k.start)\n\t\t\tlet stop = k.stop ? new Date(k.stop) : new Date()\n\t\t\ttotal += stop - start\n\t\t\tbody += \"|\" + this.dateFormat(start)+ \"|\" + this.dateFormat(stop)+ \"|\"+ this.hourFormat(stop - start)+ \"|\"+ this.hourFormat(total)+ \"|\" + k.name+ \"|\\n\"\n\t\t})\n\t\tbody += \t\"| | | |\\n\"\n\t\tbody += \t\"| Total | | \" + this.hourFormat(total)+ \" | | |\\n\"\n\n        return body\n    }\n\n\tfilterDates(timings, start, end){\n\t\tlet filterStart = function(timings){\n\t\t\tlet filtered = []\n\t\t\tfor(let i = 0; i < timings.length; i++){\n\t\t\t\tif(new Date(start) < new Date(timings[i].start)){\n\t\t\t\t\tfiltered.push(timings[i])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filtered\n\t\t}\n\t\tlet filterEnd = function(timings){\n\t\t\tlet filtered = []\n\t\t\tfor(let i = 0; i < timings.length; i++){\n\t\t\t\tif(new Date(end) > new Date(timings[i].start)){\n\t\t\t\t\tfiltered.push(timings[i])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filtered\n\t\t}\n\n\t\treturn start && end ? filterStart(filterEnd(timings)) : (start ? filterStart(timings) : filterEnd(timings))\n\t}\n\tunflatTasks(tasks){\n\t\tlet keys = Object.keys(tasks)\n\t\tlet unflattened = []\n\t\tfor(let i1 = 0; i1 < keys.length; i1++){\n\t\t\tfor(let i2 = 0; i2 < tasks[keys[i1]].timings.length; i2++){\n\t\t\t\tlet timing = tasks[keys[i1]].timings[i2]\n\t\t\t\ttiming.name = keys[i1]\n\t\t\t\ttiming.description = tasks[keys[i1]].description\n\t\t\t\tunflattened.push(timing)\n\t\t\t}\n\t\t}\n\t\treturn unflattened\n\t}\n\n\tdateFormat(d){\n\t\tlet date = d.getFullYear() + \"/\"\n\t\tlet twoDigits = n => n < 10 ? \"0\" + n : n\n\t\tdate += twoDigits(d.getMonth()+1) + \"/\"\n\t\tdate += twoDigits(d.getDate()) + \" \"\n\t\tdate += twoDigits(d.getHours()) + \"&#58;\"\n\t\tdate += twoDigits(d.getMinutes()) + \"&#58;\"\n\t\tdate += twoDigits(d.getSeconds())\n\t\treturn date\n\t}\n\n\thourFormat(d){\n\t\tlet date = new Date(d)\n\t\tlet twoDigits = n => n < 10 ? \"0\" + n : n\n\t\treturn Math.floor(d / 36e5) + \"&#58;\" + twoDigits(date.getMinutes()) + \"&#58;\" + twoDigits(date.getSeconds())\n\t}\n\n    getConfig(){\n        return this.config\n    }\n\n    configure(element, value){\n\n        if (configElements.indexOf(element) < 0){\n            return cliError(`Config key (${element}) not allowed, allowed keys: ${this.configElements.toString()} `)\n        }\n\n        let newCfg = {\n            [element]: value\n        }\n\n        this.config = Object.assign({}, this.config, newCfg)\n        this.cfg.set('config', this.config)\n\n        return this.config\n    }\n\n    update() {\n        if (!this.config || (this.config && this.config['config.version'] !== '2') ){\n            console.log('DB: Need to be updated')\n\n            migrateToV2(this.tasks)\n                .then(tasks => {\n                    let newTasks = {}\n                    tasks.forEach(t => newTasks[t.key] = t.task)\n                    return newTasks\n                })\n                .then(migratedTasks => {\n                    this.cfg.set('tasks', migratedTasks)\n                    this.cfg.set('config', Object.assign(this.config, {\n                        'config.version': '2'\n                    }))\n\n                    cliSuccess('Configuration migrated to version 2.')\n                }, cliError)\n                .catch(cliError)\n        } else {\n            cliSuccess('No need to update the DB.')\n        }\n    }\n\n    sumarize(key, rate, full=true){\n        let tasks = this.search(key)\n        tasks.sort((a,b) => { return a.name > b.name })\n        sumarize(key, tasks, rate, full, this.config['format.output'])\n    }\n}\n"]}